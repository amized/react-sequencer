{"version":3,"sources":["title.js","App.js","index.js"],"names":["Wrapper","styled","h1","CharWrapper","span","props","isPrev","active","steps","Array","apply","length","map","item","index","SequencedTitle","useSequencer","loop","complete","sequencer","api","useEffect","play","chars","split","char","key","Header","div","HeaderButtons","Main","main","Intro","p","Section","CodeEmbed","iframe","NavLink","a","App","className","href","data-icon","data-size","aria-label","src","title","allow","sandbox","Component","ReactDOM","render","document","getElementById"],"mappings":"2jBAIA,IAAMA,EAAUC,IAAOC,GAAV,KAIPC,EAAcF,IAAOG,KAAV,KACF,SAACC,GAAD,OACXA,EAAMC,QAEFD,EAAME,OADN,8BAGA,iCACG,SAACF,GAAD,OACPA,EAAMC,OAAS,UAAYD,EAAME,OAAS,UAAY,UAoCpDC,EAAQC,MAAMC,MAAM,KAAM,CAAEC,OAAQ,KAAMC,KAAI,SAACC,EAAMC,GAAP,MAAiB,CACnEA,EACA,QAGaC,EAnCQ,WAAO,IAAD,EACFC,YAAa,CACpCR,QACAS,MAAM,EACNC,UAAU,IAJe,mBACpBC,EADoB,KACTC,EADS,KAO3BC,qBAAU,WACRD,EAAIE,SACH,IAEH,IAAMC,EAAQ,kBAAkBC,MAAM,IAEtC,OACE,6BACE,kBAACxB,EAAD,KACGuB,EAAMX,KAAI,SAACa,EAAMX,GAAP,OACT,kBAACX,EAAD,CACEuB,IAAKZ,EACLP,OAAQO,IAAUK,EAAUL,MAC5BR,OAAQQ,IAAUK,EAAUL,MAAQ,GAEnCW,S,s8BCvCb,IAAME,EAAS1B,IAAO2B,IAAV,KAUNC,EAAgB5B,IAAO2B,IAAV,KAQbE,EAAO7B,IAAO8B,KAAV,KAMJC,EAAQ/B,IAAOgC,EAAV,KAILC,EAAUjC,IAAO2B,IAAV,KAIPO,EAAYlC,IAAOmC,OAAV,KAOTC,EAAUpC,IAAOqC,EAAV,KA6GEC,E,uKAtGX,OACE,6BACE,kBAACZ,EAAD,KACE,kBAAC,EAAD,MACA,kBAACK,EAAD,gFAIA,kBAACH,EAAD,KACE,uBACEW,UAAU,gBACVC,KAAK,4CACLC,YAAU,eACVC,YAAU,QACVC,aAAW,uCALb,QASA,uBACEJ,UAAU,gBACVC,KAAK,iDACLC,YAAU,sBACVC,YAAU,QACVC,aAAW,uCALb,QASA,kBAACP,EAAD,CAASI,KAAK,mEAAd,UAKJ,kBAACX,EAAD,KACE,kBAACI,EAAD,KACE,yCACA,yIAIA,uCACA,kBAACC,EAAD,CACEU,IAAI,qFACJC,MAAM,2BACNC,MAAM,qJACNC,QAAQ,8FAGZ,kBAACd,EAAD,KACE,+CACA,qWAOA,uCACA,kBAACC,EAAD,CACEU,IAAI,6GACJC,MAAM,gBACNC,MAAM,qJACNC,QAAQ,8FAGZ,kBAACd,EAAD,KACE,mDACA,iTAOA,uCACA,kBAACC,EAAD,CACEU,IAAI,sGACJC,MAAM,aACNC,MAAM,qJACNC,QAAQ,8FAGZ,kBAACd,EAAD,KACE,+CACA,2MAKA,uCACA,kBAACC,EAAD,CACEU,IAAI,sFACJC,MAAM,eACNC,MAAM,qJACNC,QAAQ,oG,GA/FJC,aC1ClBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c7e00dfb.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport { useSequencer } from 'react-sequencer'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.h1`\n  display: flex;\n`\n\nconst CharWrapper = styled.span`\n  transform: ${(props) =>\n    props.isPrev\n      ? 'translate3d(0,0,0) scale(2)'\n      : props.active\n      ? 'translate3d(0,0,0) scale(2)'\n      : 'translate3d(0,0,0) scale(1)'};\n  color: ${(props) =>\n    props.isPrev ? '#6fcef5' : props.active ? '#7ae87a' : '#000'};\n  transform-origin: 50% 50%;\n  transition: transform 0.4s linear, color 0.3s linear;\n  margin: 0 10px;\n`\n\nconst SequencedTitle = () => {\n  const [sequencer, api] = useSequencer({\n    steps,\n    loop: true,\n    complete: false,\n  })\n\n  useEffect(() => {\n    api.play()\n  }, [])\n\n  const chars = 'React Sequencer'.split('')\n\n  return (\n    <div>\n      <Wrapper>\n        {chars.map((char, index) => (\n          <CharWrapper\n            key={index}\n            active={index === sequencer.index}\n            isPrev={index === sequencer.index - 1}\n          >\n            {char}\n          </CharWrapper>\n        ))}\n      </Wrapper>\n    </div>\n  )\n}\n\nconst steps = Array.apply(null, { length: 15 }).map((item, index) => [\n  index,\n  200,\n])\n\nexport default SequencedTitle\n","import React, { Component } from 'react'\nimport SequencedTitle from './title'\nimport UsingHook from './using-hook'\nimport styled from 'styled-components'\n\nconst Header = styled.div`\n  height: 400px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  background: #fff;\n  padding: 30px;\n`\n\nconst HeaderButtons = styled.div`\n  display: flex;\n  justify-content: center;\n  > * {\n    margin: 0 1rem;\n  }\n`\n\nconst Main = styled.main`\n  max-width: 1000px;\n  margin: 0px auto;\n  padding: 100px 50px;\n`\n\nconst Intro = styled.p`\n  margin: 40px 0;\n`\n\nconst Section = styled.div`\n  margin-bottom: 50px;\n`\n\nconst CodeEmbed = styled.iframe`\n  width: 100%;\n  height: 500px;\n  overflow: hidden;\n  border-radius: 4px;\n`\n\nconst NavLink = styled.a`\n  font-size: 20px;\n  text-decoration: none;\n`\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header>\n          <SequencedTitle />\n          <Intro>\n            The smarter way to perform complex animations and transitions in\n            React.\n          </Intro>\n          <HeaderButtons>\n            <a\n              className=\"github-button\"\n              href=\"https://github.com/amized/react-sequencer\"\n              data-icon=\"octicon-star\"\n              data-size=\"large\"\n              aria-label=\"Star ntkme/github-buttons on GitHub\"\n            >\n              Star\n            </a>\n            <a\n              className=\"github-button\"\n              href=\"https://github.com/amized/react-sequencer/fork\"\n              data-icon=\"octicon-repo-forked\"\n              data-size=\"large\"\n              aria-label=\"Fork ntkme/github-buttons on GitHub\"\n            >\n              Fork\n            </a>\n            <NavLink href=\"https://github.com/amized/react-sequencer/blob/master/README.md\">\n              Docs\n            </NavLink>\n          </HeaderButtons>\n        </Header>\n        <Main>\n          <Section>\n            <h2>End modes</h2>\n            <p>\n              With the endMode option you can control how the sequencer behaves\n              when it reaches the end of the sequence.\n            </p>\n            <h3>Example</h3>\n            <CodeEmbed\n              src=\"https://codesandbox.io/embed/react-sequencer-endmodes-ow8js?fontsize=14&theme=dark\"\n              title=\"react sequencer endmodes\"\n              allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n              sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n            />\n          </Section>\n          <Section>\n            <h2>A content fader</h2>\n            <p>\n              React sequencer is very useful for building complex transitions\n              where you need to bring some elements in and and out by applying\n              css to both elements in a synchronized fashion. This example shows\n              how easy it is to build a content fader component, which smoothly\n              animates the height and opacity to create a seamless transition.\n            </p>\n            <h3>Example</h3>\n            <CodeEmbed\n              src=\"https://codesandbox.io/embed/muddy-fire-n5311w4l70?fontsize=14&module=%2Fsrc%2Fcontent-fader.js&theme=dark\"\n              title=\"content-fader\"\n              allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n              sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n            />\n          </Section>\n          <Section>\n            <h2>A slide down widget</h2>\n            <p>\n              By using two useSequencer hooks in a compnent you can create\n              powerful show/hide animations. Below is an example of a slide down\n              that uses a sequencer for the \"in\" transition and another for the\n              \"out\" transition. With this we are able to animate the transition\n              with pure css.\n            </p>\n            <h3>Example</h3>\n            <CodeEmbed\n              src=\"https://codesandbox.io/embed/slide-down-lui5k?fontsize=14&module=%2Fsrc%2Fslide-down.tsx&theme=dark\"\n              title=\"slide-down\"\n              allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n              sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n            ></CodeEmbed>\n          </Section>\n          <Section>\n            <h2>Step properties</h2>\n            <p>\n              React sequencer allows you to add properties to steps simply by\n              passing an object as the step name rather than a string. This is a\n              powerful way configure complex sequences.\n            </p>\n            <h3>Example</h3>\n            <CodeEmbed\n              src=\"https://codesandbox.io/embed/object-names-jjjtc?fontsize=14&moduleview=1&theme=dark\"\n              title=\"object names\"\n              allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n              sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n            />\n          </Section>\n        </Main>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles.css'\n//import Playground from './playground'\nimport App from './App'\n\n//ReactDOM.render(<App />, document.getElementById('root'))\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}